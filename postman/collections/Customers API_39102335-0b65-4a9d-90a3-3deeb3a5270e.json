{
	"info": {
		"_postman_id": "9c800c92-bb85-498d-bf39-d06e31b4d35b",
		"name": "Customers API",
		"description": "API for creating and managing NOVA Security users.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "24113198-9c800c92-bb85-498d-bf39-d06e31b4d35b"
	},
	"item": [
		{
			"name": "get",
			"item": [
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7f2f6fba-9d1b-477f-a4c9-c5bdfc846fd4",
								"exec": [
									"// const res = pm.response.json();",
									"// const id = pm.collectionVariables.get('id');",
									"",
									"// pm.test('Status code is 200', () => {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test('One user exists', () => {",
									"//    pm.expect(res).to.have.length(2);",
									"// });",
									"",
									"// pm.test('User has all relevant fields', () => {",
									"//     res.forEach((val, i) => {",
									"//         if (i > 0) {",
									"//             pm.expect(val).to.have.all.keys('id', 'firstName', 'lastName');",
									"            ",
									"//         }",
									"//     });",
									"// });",
									"",
									"// pm.test('User passwords are not exposed', () => {",
									"//     res.forEach((val) => {",
									"//        pm.expect(val).to.not.have.property('password');",
									"//     });",
									"// });",
									"",
									"// // cleanup",
									"// pm.collectionVariables.unset('id');",
									"",
									"// pm.sendRequest({",
									"//     url: `${pm.collectionVariables.get('url')}/delete?id=${id}`,",
									"//     method: 'delete'",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c895b9c6-e281-4989-8ef0-4ba5ee87c3a5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get?all=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"key": "all",
									"value": "true"
								}
							]
						},
						"description": "Get all users in the system."
					},
					"response": [
						{
							"id": "d9a43b6b-973f-45d2-9e13-f987618d1eaa",
							"name": "200 OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get?all=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "105"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:00:53 GMT"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"69-ti7ujd/Cyb8EeoWoqRXh482Zy5o\""
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"Ben\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"Smith\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get all users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a625e291-db8d-4798-8be4-613b698f8cb5",
								"exec": [
									"// const res = pm.response.json();",
									"// const id = pm.collectionVariables.get('id');",
									"",
									"// pm.test('Status code is 200', () => {",
									"//     pm.response.to.have.status(200);",
									"// });",
									"",
									"// pm.test('List of users is returned', () => {",
									"//     pm.expect(res).to.be.an('array');",
									"// });",
									"",
									"// pm.test('User passwords are not exposed', () => {",
									"//     res.forEach((val, i) => {",
									"//         if (i > 0) {",
									"//             pm.expect(val).to.not.have.all.keys('password');   ",
									"//         }",
									"//     });",
									"// });",
									"",
									"// pm.test('User has all relevant fields and correct types', () => {",
									"//     res.forEach((val, i) => {",
									"//         if (i > 0) {",
									"//             pm.expect(val.id).to.be.a('string');",
									"//             pm.expect(val.firstName).to.be.a('string');",
									"//             pm.expect(val.lastName).to.be.a('string');",
									"//         }",
									"//     });",
									"// });",
									"",
									"// // cleanup",
									"// pm.collectionVariables.unset('id');",
									"",
									"// pm.sendRequest({",
									"//     url: `${pm.collectionVariables.get('url')}/delete?id=${id}`,",
									"//     method: 'delete'",
									"// });"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2757cde7-b238-49f4-b71c-32653bf074be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/get/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"get",
								""
							]
						},
						"description": "Get all users in the system."
					},
					"response": [
						{
							"id": "e5f4cd89-a00f-4fe4-a882-1d715eac02f1",
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/get/?firstName={{$randomLastName}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"get",
										""
									],
									"query": [
										{
											"key": "firstName",
											"value": "{{$randomLastName}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"_postman_previewtype": "html",
							"header": [
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Content-Length",
									"value": "105"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "Date",
									"value": "Fri, 11 Jan 2019 00:05:34 GMT"
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "ETag",
									"value": "W/\"69-F/ktIhtM5We/sndYYNUK1vmdEnQ\""
								},
								{
									"description": {
										"content": "",
										"type": "text/plain"
									},
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "[\n  {\n    \"status\": \"success\"\n  },\n  {\n    \"firstName\": \"{{$randomFirstName}}\",\n    \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n    \"lastName\": \"{{$randomLastName}}\"\n  }\n]"
						}
					]
				}
			],
			"id": "29fa3299-9580-4996-965b-0ed098682fca"
		},
		{
			"name": "New user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bc3e5eb9-00aa-4b3f-9f34-6d5e42a08989",
						"exec": [
							"// const res = pm.response.json();",
							"",
							"// pm.test('Status code is 200', () => {",
							"//     pm.response.to.have.status(200);",
							"// });",
							"",
							"// pm.test('API response is successful', () => {",
							"//     pm.expect(res.status).to.eql('success');",
							"// });",
							"",
							"// pm.test('Created user has correct type of user ID', () => {",
							"//     pm.expect(res.id).to.be.a('string');",
							"// });",
							"",
							"// pm.test('Does not expose user password', () => {",
							"//     pm.expect(res).to.not.have.property('password');",
							"// });",
							"",
							"// pm.test('Created user has all relevant fields', () => {",
							"//     pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
							"// });",
							"// pm.collectionVariables.set('id', pm.response.json().id)",
							"",
							"// function rawToObject (str) {",
							"//     return str.split('&').reduce((prev, curr, i, arr) => {",
							"//         var p = curr.split('=');",
							"//         prev[decodeURIComponent(p[0])] = decodeURIComponent(p[1]);",
							"//         return prev;",
							"//     }, {});",
							"// }"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "62ff60b1-ec7b-479d-8bef-82b492454b67",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/create",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"create"
					]
				},
				"description": "Creates a new user in the system. The user will be assigned an ID automatically. This can be found in the response."
			},
			"response": [
				{
					"id": "ea8c1071-81fb-4ef2-8193-4a99b836a9de",
					"name": "New user",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"{{$randomFirstName}}\",\n  \"lastName\": \"{{$randomLastName}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/create",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"create"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"_postman_previewtype": "html",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Length",
							"value": "101"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Date",
							"value": "Thu, 10 Jan 2019 23:58:59 GMT"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "ETag",
							"value": "W/\"65-KsPJ95rCxmmvvRBY2Sqroxk2vmA\""
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"firstName\": \"Ben\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
				}
			]
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "747443f8-afea-4f9b-aeed-53500905f278",
						"exec": [
							"// const response = pm.response;",
							"// const id = pm.request.url.query.get('id');",
							"",
							"// pm.test('Operation is successful', () => {",
							"//     const res = response.json();",
							"//     pm.expect(res.status).to.eql('success');",
							"// });",
							"",
							"// pm.test('User matches requested user', () => {",
							"//     const res = response.json();",
							"//     pm.expect(res.id).to.eql(id);",
							"// });",
							"",
							"",
							"// // cleanup",
							"// pm.collectionVariables.unset('id');"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "646682d2-71f8-4f14-bd41-7132bda836fb",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "text/plain"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"\""
				},
				"url": {
					"raw": "{{baseUrl}}/delete?id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"delete"
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}",
							"description": "The user's ID"
						}
					]
				},
				"description": "Deletes a user from the system by `id`."
			},
			"response": [
				{
					"id": "f46cb873-6396-4e3d-957d-29c6bd1d8441",
					"name": "Delete user",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"\""
						},
						"url": {
							"raw": "{{baseUrl}}/delete?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"delete"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"_postman_previewtype": "html",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Length",
							"value": "64"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Date",
							"value": "Fri, 11 Jan 2019 00:20:55 GMT"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "ETag",
							"value": "W/\"40-bT/ASzl0KO3wj/eo2xEBaHPLnvk\""
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"status\": \"success\"\n}"
				}
			]
		},
		{
			"name": "Update user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1bb6530f-36b7-4995-bb89-9bafc59f242d",
						"exec": [
							"// const res = pm.response.json();",
							"// const id = pm.request.url.query.get('id');",
							"// const firstName =JSON.parse(pm.request.body.raw).firstName",
							"// console.log('res.id vs id: '+res.id + id)",
							"// pm.test('Status code is 200', () => {",
							"//     pm.response.to.have.status(200);",
							"// });",
							"",
							"// if (res.status === 'success') {",
							"//     // pm.test('User matches requested user', () => {",
							"//     //     pm.expect(res.id).to.eql(id);",
							"//     // });",
							"    ",
							"//     pm.test('User has correct type of user ID', () => {",
							"//         pm.expect(res.id).to.be.a('string');",
							"//     });",
							"    ",
							"//     pm.test('User has all relevant fields', () => {",
							"//         pm.expect(res).to.have.all.keys('status', 'id', 'firstName', 'lastName');",
							"//     });",
							"    ",
							"//     pm.test('Does not expose user password', () => {",
							"//         pm.expect(res).to.not.have.property('password');",
							"//     });",
							"    ",
							"//     pm.test('First name is updated to: ' + firstName, () => {",
							"//         pm.expect(res.firstName).to.eql(firstName);",
							"//     });",
							"// }",
							"",
							"// else if (res.status === 'no user found') {",
							"//     pm.test('Lookup was against correct user', () => {",
							"//         pm.expect(res.id).to.eql(id);",
							"//     });",
							"// }",
							"",
							"// else {",
							"//     pm.test(res.status).to.eql('invalid request');",
							"// }",
							"",
							"// // cleanup",
							"// pm.collectionVariables.unset('id');",
							"",
							"// // pm.sendRequest({",
							"// //     url: `${pm.collectionVariables.get('baseUrl')}/delete?id=${id}`,",
							"// //     method: 'delete'",
							"// // });"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "9fa0ccfa-db78-4c62-9bd4-ea7fe4d3358d",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/form-urlencoded"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/update?id={{id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"update"
					],
					"query": [
						{
							"key": "id",
							"value": "{{id}}",
							"description": "The user's ID (required)"
						}
					]
				},
				"description": "Send the keys that you'd like to update, this can be one or more of `firstName`, `lastName` and `password`."
			},
			"response": [
				{
					"id": "80db085c-373b-4834-80bb-af92a6210b1d",
					"name": "Update user",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Benjamin\",\n  \"password\": \"foobar\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/update?id={{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"update"
							],
							"query": [
								{
									"key": "id",
									"value": "{{id}}"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"_postman_previewtype": "html",
					"header": [
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Content-Length",
							"value": "106"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "Date",
							"value": "Fri, 11 Jan 2019 00:18:07 GMT"
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "ETag",
							"value": "W/\"6a-SA9mzR+M2pmN7WPGgLm1ZqtRYis\""
						},
						{
							"description": {
								"content": "",
								"type": "text/plain"
							},
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n  \"firstName\": \"Benjamin\",\n  \"id\": \"0729d37c-ef9f-4ffa-8f71-a6eedf1f95b7\",\n  \"lastName\": \"Smith\",\n  \"status\": \"success\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d1622ba3-7e0a-4e5c-b22f-629f2ae92c43",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c0163dcd-44d4-4015-b2d9-d2e2fde9447c",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"id": "9d3ec3ba-971e-4176-b6b4-bf30f520173e",
			"key": "baseUrl",
			"value": "https://bd1edaea-4ae1-45d4-af9a-9110c60ab241.mock.pstmn.io",
			"type": "string"
		}
	]
}